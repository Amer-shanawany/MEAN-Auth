{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/gaurds/auth.gaurd.ts","./src/app/services/auth.service.ts","./src/app/services/validate.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n <div class=\"container\">\n     <flash-messages></flash-messages>\n    <router-outlet></router-outlet>\n</div>      ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule   } from '@angular/common/http';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nimport { ValidateService } from './services/validate.service';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { AuthGaurd } from './gaurds/auth.gaurd';\n\nconst appRoutes =  [\n  {path: '', component: HomeComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent}, \n  {path: 'dashboard', component: DashboardComponent, canActivate:[AuthGaurd]},\n  {path: 'profile', component: ProfileComponent, canActivate:[AuthGaurd]},\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule, \n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot(),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: ()=>{\n          return localStorage.getItem('id_token');\n        },\n        allowedDomains:['localhost']\n        \n      },\n      \n    })\n  ],\n  providers: [ValidateService,\n    AuthGaurd\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 class=\"page-header\">Dashboard</h2>\n<p>Welcome to your dashboard</p>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h1>MEAN Jwt Authentication</h1>\n    <p class=\"lead\">Welcome MEAN stack Jwt authentication app. </p>\n    <div>\n        <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a>\n        <a class=\"btn btn-secondary\" [routerLink]=\"['/login']\">login</a>\n\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-4\">\n        <h3>Express MongoDB Backend</h3>\n        <p>NodeJs based backend, Express to manage all requests,\n             mongodb to manage the database using Mongoose,\n             bycrypt to encrypt saved passwords,\n             passport-jwt to handle jwt tokens\n        </p>\n    </div>\n    <div class=\"col-md-4\">\n        <h3>Angular Cli Forntend</h3>\n        <p>Anuglar-Cli to generate components and services</p>\n    </div>\n    <div class=\"col-md-4\">\n        <h3>JWT tokens</h3>\n        <p>JSON web tokens based authentication, for login and storing user data</p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport {   FlashMessagesService } from 'angular2-flash-messages';\nimport { stringify } from '@angular/compiler/src/util';\n @Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: String;\n  password: String;\n  constructor(private authService: AuthService,\n     private router: Router,\n     private flashMessages: FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\n  onLoginSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n    \n    this.authService.authenticateUser(user).subscribe(data => {\n         if(data.success){\n          this.authService.storeUserData(data.token, data.user);\n          this.flashMessages.show(`You're now logged in`,{cssClass: 'alert-success',\n          timeout: 3000});\n          this.router.navigate(['dashboard'])\n\n        }else{\n         this.flashMessages.show(data.msg, \n          {cssClass: 'alert-danger',\n           timeout: 3000});\n           this.router.navigate(['login'])\n       }\n    })\n  }\n}\n","<h2 class=\"page-header\">Login</h2>\n<form (submit)=\"onLoginSubmit()\">\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\n    </div>\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"login\">\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: [ './navbar.component.css' ] \n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private flashMessagesService: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router){}\n  ngOnInit(): void {\n  }\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessagesService.show(`You're logged out`, {\n      cssClass:'alert-success',\n      timeout: 3000\n    })\n    this.router.navigate(['login']);\n    return false;\n  }\n  isLoggedIn(){\n    return this.authService.loggedIn();\n  }\n}\n","<nav class=\"navbar original navbar-expand-md navbar-dark bg-dark fixed-top\">\n    <a class=\"navbar-brand\" href=\"#\">MEAN Jwt Auth</a>\n    \n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n          <a  [routerLink]=\"['/']\">Home</a>\n        </li>\n      </ul>\n      <ul class=\"nav nav-bar nav-item  nav-bar-right\">\n        \n        <li *ngIf=\"!isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n        </li>\n       \n        <li *ngIf=\"!isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n        </li>\n        <li  *ngIf=\"isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n          <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile</a>\n      </li>\n      <li *ngIf=\"isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n    </li>\n        <li  *ngIf=\"isLoggedIn()\">\n          <a class=\"nav-link\" href=\"#\" (click)=\"onLogoutClick()\">Logout</a>\n      </li>\n        \n      </ul>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user:Object;\n\n  constructor(private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.getProfile().subscribe( profile=>{\n      \n      this.user = profile.user\n    },\n    err=> {\n      console.log(err);\n\n      return false;\n    });\n  }\n\n\n\n}\n","<div *ngIf=\"user\">\n    <h2 class=\"page-header\">{{user.name}}</h2>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\">Username: {{user.username}}</li>\n        <li class=\"list-group-item\">Email: {{user.email}}</li>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit{\n    name: String;\n    username: String; \n    email: String;\n    password: String;\n    constructor(private validateService: ValidateService,\n         private flashMessagesService: FlashMessagesService,\n         private authService: AuthService,\n         private router: Router){}\n    ngOnInit(): void {\n     }\n\n     onRegisterSubmit(){\n        const user = {\n            name: this.name,        \n            email: this.email,\n            username: this.username,\n            password: this.password\n        }\n        \n        if(!this.validateService.validateRegister(user)){\n            this.flashMessagesService.show(\"Not all fields are filled\", {cssClass: 'alert-danger', timeout: 3000});\n            return false;\n        }\n        if(!this.validateService.validateEmail(user.email)){\n            this.flashMessagesService.show(\"Please use a valid email!\", {cssClass: 'alert-danger', timeout: 3000});\n            return false;\n        }\n\n          this.authService.registerUser(user).subscribe((data) =>{\n            if(data){\n                this.flashMessagesService.show(\"You're now registered and can log in\", {cssClass: 'alert-success', timeout:3000})\n                this.router.navigate(['/login'])\n            }else{\n\n                this.flashMessagesService.show(\"Something went wrong\", {cssClass: 'alert-danger', timeout:3000})\n                this.router.navigate(['/register'])\n            }\n        \n        });\n    }\n\n} ","<h2 class=\"page-header\">Registeration Form</h2>\n\n<form (submit)=\"onRegisterSubmit()\">\n    <div class=\"form-group\">\n        <label>Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type=\"text\" [(ngModel)]=\"email\" name=\"email\"  class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"text\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\">\n    </div>\n    <input value=\"Submit\" type=\"submit\" class=\"btn btn-primary\">\n</form>","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n    providedIn: 'root'\n  })\n\nexport class AuthGaurd implements CanActivate {\n    constructor(private router: Router, \n        private authService: AuthService){}\n    canActivate(){\n        if(this.authService.loggedIn()){\n            return true;\n        } else {\n            this.router.navigate(['/login']);\n        }\n        \n    }\n}","import { Injectable } from '@angular/core'; \nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: string;\n  user: any;\n  baseUrl =  '/users';\n  headers = new HttpHeaders()\n    .set('content-type','application/json')\n    .set('Access-Control-Allow-Origin','*');\n  constructor(private http:   HttpClient,\n    private jwtHelperService:JwtHelperService)  { }\n\n  registerUser(user){\n    let url =  this.baseUrl + '/register';\n \n    \n    return this.http.post<User>(url, user, { headers: this.headers })\n     .pipe(map(res => JSON.stringify(res)));\n  }\n  authenticateUser(user){\n    let url = this.baseUrl + '/authenticate';\n\n    return this.http.post<Data>(url, user, { headers: this.headers })\n  }\n\n  getProfile(){\n    this.loadToken();\n    let x = this.headers.append('Authorization', \"Bearer \"+this.authToken);\n    let url = this.baseUrl + '/profile';\n    return this.http.get<Profile>(url, { headers: x})\n    //.pipe(map(res => JSON.stringify(res)));\n\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n  loggedIn(){\n     \n    return !this.jwtHelperService.isTokenExpired();\n  }\n}\n\n\ninterface Data{\n  success: string,\n  msg: string,\n  token: string,\n  user: any\n}\ninterface User{\n  name:string,\n  username:string,\n  email:string,\n  password:string\n}\ninterface Profile{\n  user: User\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if(user.name == undefined ||\n       user.email == undefined ||\n       user.username == undefined ||\n       user.password == undefined){\n\n        return false;\n\n    }else{\n      return true;\n    }\n\n\n  }\n  \n  validateEmail(email){\n       const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email).toLowerCase());\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}